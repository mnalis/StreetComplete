Nitesh TaraniNitesh Tarani
14th May 2020
Introduction to Github Actions for Android
Introduction to Github Actions for Android

You may have heard about Continuous Integration and Continuous Delivery. These 2 terms are a standard practice followed by top companies to make the release of their software smaller, faster, and reliable. You can read more about these topics here.
So what are Github Actions?

It is a CI/CD tool to automate the software workflow very easily. There are several tools like Jenkins, CircleCI, TeamCity, TravisCI which help you to automate your workflow, but setting up Github Actions for your repository on Github is extremely easy. We’ll discuss in this blog post how to get started with the same.
Getting Started

When you open your repository on Github, you will now see a new tab called “Actions”. Since we don’t have any action setup as yet the page will look similar to this.
Introduction to Github Actions for Android

We will start by creating a YAML file that is commonly used for configurations. We can do so either by clicking “setup a workflow yourself” link in the Actions tab (see the above screenshot) or by creating a file in your favorite IDE. We first have to create .github/workflows folder in the root of the repository, and in that folder, we will create a file called first-workflow.yml.

In this file, we will define the actions that we need to perform. We will be defining 3 actions which include running unit tests, building an apk file, and uploading the apk file to Github servers.

Now open first-workflow.yml and paste the following code

# This is a basic workflow to help you get started with Actions

name: Android CI

  on:
    push:
      branches: [ master ]
    pull_request:
      branches: [ master ]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Unit tests
      run: bash ./gradlew test --stacktrace

  build:
    name: Generate APK
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build Debug APK
      run: bash ./gradlew :app:assembleDebug
              
    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: App
        path: ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk
